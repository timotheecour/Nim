# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=example#trigger
# trigger:
# - master


strategy:
  matrix:
    linux:
      # note: travis was using trusty aka Ubuntu 14.04.5 LTS
      imageName: 'ubuntu-16.04'
    mac:
      imageName: 'macos-10.13'
    mac_cpp:
      # 'macos-10.14' fails
      imageName: 'macos-10.13'
      NIM_COMPILE_TO_CPP: 'true'

    # windows:
    #   imageName: 'vs2017-win2016' # CHECKME

pool:
  vmImage: $(imageName)

variables:
  MY_VAR: my value

steps:
- script: |
    # echo See https://aka.ms/yaml
    # separate step so we can download its log separately (can't download log before a script finishes apparently?)
    bash ci_run.sh
    # # set -e
    # #set -u
    # echo $0
    # echo $SHELL
    # function echo_run(){echo "$@" && "$@"}
    # echo_run pwd
    # # echo pwd:$(pwd)
    # # echo imageName:$(imageName)
    # echo_run echo $(imageName)
    # # doesn't work: echo imageName2:${imageName}
    # # echo "env:"
    # echo_run env

    # echo_run echo $MY_VAR

    # # note: node too old, gives SyntaxError: Unexpected token function
    # # v6.16.0
    # # /usr/local/bin/node
    # # Updating Homebrew...

    # echo_run node --version
    # echo_run which node
    # # brew upgrade node
    # echo_run brew install node
    # echo_run which node
    # echo_run node --version
    # echo_run echo "ok1"

- script: |
    exit # PRTEMP
    # sh build_all.sh
    git clone --depth 1 https://github.com/nim-lang/csources.git
    cd csources
    sh build.sh
    cd ..

    export PATH=$(pwd)/bin${PATH:+:$PATH}
    echo PATH:${PATH}

    nim c koch
    ./koch runCI
    # TODO: before_deploy and deploy from travis

  displayName: 'Nim runCI'
