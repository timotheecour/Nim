# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# https://docs.microsoft.com/en-us/azure/devops/pipelines/yaml-schema?view=vsts&tabs=example#trigger
# trigger:
# - master


strategy:
  matrix:
    linux:
      imageName: 'ubuntu-16.04'

    mac:
      imageName: 'macos-10.13'
      NIM_COMPILE_TO_CPP2: 'false'

    mac_cpp:
      imageName: 'macos-10.13'
      NIM_COMPILE_TO_CPP2: 'true'

      # imageName: 'macos-10.14' # fails
    # windows:
    #   imageName: 'vs2017-win2016' # CHECKME

pool:
  vmImage: $(imageName)
  # vmImage: 'Ubuntu-16.04'

variables:
  MY_VAR: my value
  NIM_COMPILE_TO_CPP: $(NIM_COMPILE_TO_CPP2)

steps:
- script: |
    # echo See https://aka.ms/yaml
    # separate step so we can download its log separately (can't download log before a script finishes apparently?)

    echo pwd:$(pwd)
    echo NIM_COMPILE_TO_CPP:$NIM_COMPILE_TO_CPP
    echo imageName1:$(imageName)
    # doesn't work: echo imageName2:${imageName}

    echo "env:"
    env

    echo ${ANOTHER_VAR} #ok

- script: |
    # sh build_all.sh
    git clone --depth 1 https://github.com/nim-lang/csources.git
    cd csources
    sh build.sh
    cd ..

    export PATH=$(pwd)/bin${PATH:+:$PATH}
    echo PATH:${PATH}

    nim c koch
    ./koch runCI
    # TODO: before_deploy and deploy from travis

  displayName: 'Nim runCI'
